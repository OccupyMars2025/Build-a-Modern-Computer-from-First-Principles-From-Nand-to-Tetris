// set SP=261
@261
D=A
@SP
M=D
// set ARG = SP
@SP
D=M
@ARG
M=D
// set LCL = SP
@SP
D=M
@LCL
M=D
// goto Sys.init
@Sys.init
0;JMP
// function Main.fibonacci 0
(Main.fibonacci)
@0
D=A
@R13
M=D
(Main.fibonacci$LOOP_TO_INITIALIZE_LOCAL_VARIABLES_WITH_ID_24)
@R13
D=M
@Main.fibonacci$LOOP_TO_INITIALIZE_LOCAL_VARIABLES_WITH_ID_24_END
D;JLE
@SP
A=M
M=0
@SP
M=M+1
@R13
M=M-1
@Main.fibonacci$LOOP_TO_INITIALIZE_LOCAL_VARIABLES_WITH_ID_24
0;JMP
(Main.fibonacci$LOOP_TO_INITIALIZE_LOCAL_VARIABLES_WITH_ID_24_END)
// push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@5
D=A
@R13
A=M-D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// end of return
// function Sys.init 0
(Sys.init)
@0
D=A
@R13
M=D
(Sys.init$LOOP_TO_INITIALIZE_LOCAL_VARIABLES_WITH_ID_106)
@R13
D=M
@Sys.init$LOOP_TO_INITIALIZE_LOCAL_VARIABLES_WITH_ID_106_END
D;JLE
@SP
A=M
M=0
@SP
M=M+1
@R13
M=M-1
@Sys.init$LOOP_TO_INITIALIZE_LOCAL_VARIABLES_WITH_ID_106
0;JMP
(Sys.init$LOOP_TO_INITIALIZE_LOCAL_VARIABLES_WITH_ID_106_END)
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Main.fibonacci 1
@Sys.init$ret.130
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Sys.init$ret.130)
// label END
(Sys.init$END)
// goto END
@Sys.init$END
0;JMP
// add an infinite loop to keep the program running
(END)
@END
0;JMP
